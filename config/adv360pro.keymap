#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/* definitions for mouse layer */
#include "mouse.dtsi"


#define ___ &trans

#define MO_TOG(layer) &mo_tog layer layer   // Macro to apply momentary-layer-on-hold/toggle-layer-on-tap to a specific layer
#define LT(layer) &lt layer // Macro to apply momentary-layer-on-hold/toggle-layer-on-tap to a specific layer

/ {

  behaviors {
    mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_tog";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;
        };

    gpipe: grave_pipe {
          compatible = "zmk,behavior-mod-morph";
          label = "grave_pipe";
          #binding-cells = <0>;
          bindings = <&kp GRAVE>, <&kp PIPE>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RSFT)>;
      };
    ppipe: pipe_pipe {
          compatible = "zmk,behavior-mod-morph";
          label = "pipe_pipe";
          #binding-cells = <0>;
          bindings = <&kp PIPE>, <&kp PIPE>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RSFT)>;
    };
    pkp_n1: plus_kp_n1 {
          compatible = "zmk,behavior-mod-morph";
          label = "plus_kp_n1";
          #binding-cells = <0>;
          bindings = <&kp PLUS>, <&kp KP_N1>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RSFT)>;
    };
    lkp_n2: left_bracket_kp_n2 {
          compatible = "zmk,behavior-mod-morph";
          label = "left_bracket_kp_n2";
          #binding-cells = <0>;
          bindings = <&kp LEFT_BRACKET>, <&kp KP_N2>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RSFT)>;
    };
    lkp_n3: left_brace_kp_n3 {
          compatible = "zmk,behavior-mod-morph";
          label = "left_brace_kp_n3";
          #binding-cells = <0>;
          bindings = <&kp LEFT_BRACE>, <&kp KP_N3>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RSFT)>;
    };
    lkp_n4: left_parenthesis_kp_n4 {
          compatible = "zmk,behavior-mod-morph";
          label = "left_parenthesis_kp_n4";
          #binding-cells = <0>;
          bindings = <&kp LEFT_PARENTHESIS>, <&kp KP_N4>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RSFT)>;
    };
    akp_n5: amps_kp_n5 {
          compatible = "zmk,behavior-mod-morph";
          label = "amps_kp_n5";
          #binding-cells = <0>;
          bindings = <&kp AMPS>, <&kp KP_N5>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RSFT)>;
    };
    ekp_n6: equal_kp_n6 {
          compatible = "zmk,behavior-mod-morph";
          label = "equal_kp_n6";
          #binding-cells = <0>;
          bindings = <&kp EQUAL>, <&kp KP_N6>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RSFT)>;
    };
    rkp_n7: right_parenthesis_kp_n7 {
          compatible = "zmk,behavior-mod-morph";
          label = "right_parenthesis_kp_n7";
          #binding-cells = <0>;
          bindings = <&kp RIGHT_PARENTHESIS>, <&kp KP_N7>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RSFT)>;
    };
    rkp_n8: right_brace_kp_n8 {
          compatible = "zmk,behavior-mod-morph";
          label = "right_brace_kp_n8";
          #binding-cells = <0>;
          bindings = <&kp RIGHT_BRACE>, <&kp KP_N8>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RSFT)>;
    };
    rkp_n9: right_bracket_kp_n9 {
          compatible = "zmk,behavior-mod-morph";
          label = "right_bracket_kp_n9";
          #binding-cells = <0>;
          bindings = <&kp RIGHT_BRACKET>, <&kp KP_N9>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RSFT)>;
    };
    skp_n0: star_kp_n0 {
          compatible = "zmk,behavior-mod-morph";
          label = "star_kp_n0";
          #binding-cells = <0>;
          bindings = <&kp STAR>, <&kp KP_N0>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RSFT)>;
    };
    eprcnt: excl_prcnt {
          compatible = "zmk,behavior-mod-morph";
          label = "excl_prcnt";
          #binding-cells = <0>;
          bindings = <&kp EXCL>, <&kp PRCNT>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RSFT)>;
    };
    dgrave: dllr_grave {
          compatible = "zmk,behavior-mod-morph";
          label = "dllr_grave";
          #binding-cells = <0>;
          bindings = <&kp DLLR>, <&kp GRAVE>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RSFT)>;
    };
    ggrave: grave_grave {
          compatible = "zmk,behavior-mod-morph";
          label = "grave_grave";
          #binding-cells = <0>;
          bindings = <&kp GRAVE>, <&kp GRAVE>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RSFT)>;
    };
    bhash: bslh_hash {
          compatible = "zmk,behavior-mod-morph";
          label = "bslh_hash";
          #binding-cells = <0>;
          bindings = <&kp BSLH>, <&kp HASH>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RSFT)>;
    };
    acaret: at_caret {
          compatible = "zmk,behavior-mod-morph";
          label = "at_caret";
          #binding-cells = <0>;
          bindings = <&kp AT>, <&kp CARET>;
          mods = <(MOD_LGUI|MOD_LSFT|MOD_RSFT)>;
    };
  };

    #define COLEMAK 0
    #define VIMNAV 1
    #define KEYPAD 2
    #define FN 3
    #define MOD 4
    #define QWERTY 5

    /* remove unused keys from layout and move thumb cluster to bottom */
    chosen {
        zmk,matrix_transform = &urobs_transform;
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
                &ppipe    &pkp_n1          &lkp_n2          &lkp_n3   &lkp_n4    &akp_n5   &tog KEYPAD            &mo MOD       &ekp_n6       &rkp_n7      &rkp_n8     &rkp_n9     &skp_n0     &eprcnt
                &kp TAB   &kp Q            &kp W            &kp F     &kp P      &kp B     &kp HOME               &kp END       &kp J         &kp L        &kp U       &kp Y       &kp MINUS   &bhash
                &kp ESC   &kp A            &kp R            &kp S     &mt LALT T &kp G     &kp APOS               &tog VIMNAV   &kp M         &mt LALT N   &kp E       &kp I       &kp O       &kp SEMI
                &kp LSHFT &lt VIMNAV Z     &lt KEYPAD X     &kp C     &kp D      &kp V                                          &lt KEYPAD K  &kp H        &kp COMMA   &kp DOT     &caps_word  &kp RSHFT
                &mo FN    &dgrave          &ggrave          &kp LEFT  &kp RIGHT                                                               &kp UP       &kp  DOWN   &kp FSLH    &acaret     &tog FN
                                                                      &kp LCTRL  &kp LALT               &kp LGUI     &kp RCTRL
                                                            &kp BSPC  &kp LSHFT  &kp RWIN               &kp PG_UP    &kp ENTER   &kp SPACE
                                                                                 &mo_tog VIMNAV KEYPAD  &kp PG_DN
            >;
        };

        vimnav_layer {
            bindings = <
                ___       &kp N1    &kp N2    &kp N3    &kp N4    &kp N5    ___                ___                 &kp N6        &kp N7    &kp N8    &kp N9    &kp N0    ___
                ___       ___       ___       ___       ___       ___       &kp INS            &kp PRINTSCREEN     &kp TILDE     &none     &kp U     &kp Y     ___       ___
                ___       ___       ___       ___       ___       ___       &kp DEL            ___                 &none         &kp H     &kp J     &kp K     &kp L     ___
                ___       ___       ___       ___       ___       ___                                              &none         &none     ___       ___       ___       ___
                ___       ___       ___       ___       ___                                                                      ___       ___       ___       ___       ___
                                                                  ___       ___                ___       ___
                                                        ___       ___       ___                ___       ___        ___
                                                                            ___                ___
            >;
        };

        keypad {
            bindings = <
                ___       ___    ___            ___          ___       ___         ___       ___    ___          &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MINUS     ___
                ___       ___    &kp KP_NUM     &kp LPAR     &kp RPAR  &kp AMPS    ___       ___    &kp UP       &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MULTIPLY  ___
                ___       ___    &kp KP_EQUAL   &kp LBKT     &kp RBKT  &kp TILDE   ___       ___    &kp DOWN     &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      ___
                ___       ___    ___            &kp LBRC     &kp RBRC  ___                          &kp KP_EQUAL &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     ___
                ___       ___    ___            ___          ___                                                 &kp KP_N0   &kp KP_DOT    &kp KP_DIVIDE  ___              ___
                                                                  ___       ___              ___       ___
                                                        ___       ___       ___              ___       ___    ___
                                                                            ___              ___
            >;
        };

        fn {
            bindings = <
                &kp F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6    &tog QWERTY      ___       &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
                ___       ___       ___       ___       ___       ___       &none            ___       ___       ___       ___       ___       ___       ___
                ___       ___       ___       ___       ___       ___       &none            ___       ___       ___       ___       ___       ___       ___
                ___       ___       ___       ___       ___       ___                                  ___       ___       ___       ___       ___       ___
                ___       ___       ___       ___       ___                                                      ___       ___       ___       ___       ___
                                                                  ___       ___              ___       ___
                                                        ___       ___       ___              ___       ___       ___
                                                                            ___              ___
            >;
        };

        mod {
            bindings = <
                &none       &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none            ___          &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &none
                &none       &none        &none        &none        &none        &none        &bootloader      &bootloader  &none        &none        &none        &none        &none        &none
                &none       &none        &none        &none        &none        &none        &none            &none        &none        &none        &none        &none        &none        &none
                &none       &none        &none        &none        &none        &none                                      &none        &none        &none        &none        &none        &none
                &none       &none        &none        &bl BL_INC   &bl BL_DEC                                                           &bl BL_INC   &bl BL_DEC   &none        &none        &none
                                                                                &bt BT_CLR   &bt BT_CLR       &bt BT_CLR  &bt BT_CLR
                                                                   &none        &bl BL_TOG   &none            &none       &bl BL_TOG    &none
                                                                                             &reset           &none
            >;
        };


        qwerty_layer {
            bindings = <
                &ppipe    &pkp_n1   &lkp_n2   &lkp_n3   &lkp_n4   &akp_n5   &tog KEYPAD            &mo MOD      &ekp_n6   &rkp_n7   &rkp_n8     &rkp_n9    &skp_n0      &eprcnt
                &kp TAB   &kp Q     &kp W     &kp E     &kp R     &kp T     &kp HOME               &kp END      &kp Y     &kp U     &kp I       &kp O      &kp P        &bhash
                &kp ESC   &kp A     &kp S     &kp D     &kp F     &kp G     &kp APOS               &tog QWERTY  &kp H     &kp N     &kp K       &kp L      &kp MINUS    &kp SEMI
                &kp LSHFT &kp Z     &kp X     &kp C     &kp V     &kp B                                         &kp N     &kp M     &kp COMMA   &kp DOT    &kp FSLH     &kp RSHFT
                &mo FN    &dgrave   &ggrave   &kp LEFT  &kp RIGHT                                                         &kp UP    &kp DOWN    &kp FSLH   &acaret      &tog FN
                                                                  &kp LCTRL &kp LALT               &kp LGUI     &kp RCTRL
                                                        &kp BSPC  &kp LSHFT &kp RWIN               &kp PG_UP    &kp ENTER   &kp SPACE
                                                                            &mo_tog VIMNAV KEYPAD  &kp PG_DN
            >;
        };

    };

};

